{"version":3,"sources":["pages/index/headNav.js","config/index.js","component/JyAlert.js","component/JyModal.js","component/JyLoading.js","api/index.js","pages/index/list.js","pages/index/new.js","pages/login/login.js","pages/index/index.js","App.js","serviceWorker.js","index.js"],"names":["HeadNav","props","onNavChange","i","onChange","state","this","currentKey","links","Nav","tabs","map","l","NavItem","onClick","NavLink","active","name","React","Component","envId","JyAlert","title","alertVisible","Alert","color","isOpen","JyModal","isShow","onOk","onCancel","id","Modal","ModalBody","ModalFooter","Button","JyLoading","visible","className","style","display","Spinner","invokeCloudFunction","accessToken","params","env","Promise","resolve","reject","axios","post","then","res","console","log","status","data","errcode","catch","err","List","getArticleList","setState","loading","isLogin","pageSize","pageNum","funcRs","JSON","parse","resp_data","errMsg","articles","alert","lastPage","nextPage","deleteArticle","deleteId","deleteModalToggle","deleteModalShow","closeAlert","setTimeout","onDeleteOk","_","alertTitle","goToEdit","width","Table","a","key","_id","author","length","Pagination","size","aria-label","PaginationItem","PaginationLink","first","disabled","last","saveArticle","operation","changeTab","htmlContent","mdContent","mdParser","MarkdownIt","handleEditorChange","bind","currentArticleId","html","text","Input","invalid","value","e","target","height","renderHTML","render","Login","token","onSave","href","Index","onAccessTokenChange","navs","currentNavKey","localStorage","getItem","Container","Row","articleId","setItem","withRouter","About","Dashboard","Boolean","window","location","hostname","match","ReactDOM","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a7249d2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container, Nav, NavItem, NavLink, Row, Col, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nexport default class HeadNav extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n    onNavChange = (i)=>{\r\n        const {onChange} = this.props\r\n        onChange(i)\r\n    }\r\n    render() {\r\n        const {currentKey,links} = this.props\r\n        return <Nav tabs>\r\n            {links.map((l, i) => {\r\n                return <NavItem onClick={() => { this.onNavChange(i) }}>\r\n                    <NavLink active={i==currentKey}>{l.name}\r\n                          {/* <Link to={l.href}>{l.name}</Link> */}\r\n                        </NavLink>\r\n                </NavItem>\r\n            })}\r\n\r\n        </Nav>\r\n    }\r\n}\r\n\r\n","export const envId = 'travel-pet-1'","import React, { useState } from 'react';\r\nimport { Alert } from 'reactstrap';\r\n\r\nconst JyAlert = ({title='111',alertVisible=false}) => {\r\n\r\n  return (\r\n    <Alert color=\"info\" isOpen={alertVisible}>\r\n      {title}\r\n    </Alert>\r\n  );\r\n}\r\n\r\nexport default JyAlert;","import React, { useState } from 'react';\r\nimport { Button,Modal ,ModalBody,ModalFooter} from 'reactstrap';\r\n\r\nconst JyModal = ({isShow=false,title='',onOk=()=>{},onCancel=()=>{},id=''}) => {\r\n\r\n  return (\r\n    <Modal isOpen={isShow}  >\r\n                <ModalBody>\r\n                    {title}\r\n               </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={() => onOk(id)}>Ok</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={() => onCancel() }>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n  );\r\n}\r\n\r\nexport default JyModal;","import React, { useState } from 'react';\r\nimport { Spinner } from 'reactstrap';\r\nimport './index.css'\r\nconst JyLoading = ({visible=true}) => {\r\n\r\n  return (\r\n      <div className={'jy-loading'} style={{display:(visible?'flex':'none')}}>\r\n          <Spinner color=\"primary\" />\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default JyLoading;","import axios from 'axios'\r\n\r\nexport function databaseQuery(accessToken, query, env) {\r\n  return axios.post(`/weixinapi/tcb/databasequery?access_token=${accessToken}`, {\r\n    query, env\r\n  })\r\n}\r\n\r\nexport function databaseAdd(accessToken, query, env) {\r\n  return axios.post(`/weixinapi/tcb/databaseadd?access_token=${accessToken}`, {\r\n    query, env\r\n  })\r\n}\r\nexport function databaseDelete(accessToken, query, env) {\r\n  return axios.post(`/weixinapi/tcb/databasedelete?access_token=${accessToken}`, {\r\n    query, env\r\n  })\r\n}\r\nexport function databaseUpdate(accessToken, query, env) {\r\n  return axios.post(`/weixinapi/tcb/databaseupdate?access_token=${accessToken}`, {\r\n    query, env\r\n  })\r\n}\r\nexport function invokeCloudFunction(accessToken, name, params, env) {\r\n  return new Promise((resolve, reject) => {\r\n    axios.post(`/weixinapi/tcb/invokecloudfunction?access_token=${accessToken}&env=${env}&name=${name}`, params)\r\n    .then(res => {\r\n      console.log(res);\r\n      if(res.status==200 && res.data.errcode == 0){\r\n        resolve(res.data);\r\n      }else if(res.data.errcode == 42001){\r\n        reject(\"assesstoken overtime\")\r\n      }else{\r\n        reject(\"youwenti\")\r\n      }\r\n    }).catch(err => {\r\n      reject(err.data)\r\n    })\r\n  })\r\n}","import React, { useState } from 'react';\r\nimport { Alert, Table, Pagination, PaginationItem, PaginationLink, Button, Modal, ModalHeader, ModalBody, ModalFooter, Spinner } from 'reactstrap';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {envId} from '../../config'\r\nimport JyAlert from '../../component/JyAlert'\r\nimport JyModal from '../../component/JyModal'\r\nimport JyLoading from '../../component/JyLoading'\r\nimport { invokeCloudFunction } from '../../api'\r\nexport default class List extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: false,\r\n            articles: [],\r\n            pageSize: 10,\r\n            pageNum: 1,\r\n            deleteModalShow: false,\r\n            alertVisible: false,\r\n            alertTitle: ''\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getArticleList()\r\n    }\r\n    getArticleList = () => {\r\n        this.setState({ loading: true })\r\n        const { accessToken,isLogin } = this.props\r\n        const { pageSize, pageNum } = this.state\r\n        invokeCloudFunction(accessToken, `getArticleList`, { pageSize, pageNum }, envId).then(res => {\r\n            console.log(res)\r\n            this.setState({ loading: false })\r\n            if (res.errcode == 0) {\r\n                const funcRs = JSON.parse(res.resp_data)\r\n                if (funcRs.errMsg == 'collection.get:ok') {\r\n                    this.setState({ articles: funcRs.data })\r\n                } else {\r\n                    alert('query wrong')\r\n                }\r\n            } else {\r\n                isLogin(false)\r\n                // alert(res)\r\n            }\r\n        }).catch(res => {\r\n            // alert(res)\r\n            isLogin(false)\r\n            this.setState({ loading: false })\r\n        })\r\n    }\r\n\r\n    lastPage = () => {\r\n        let { pageNum } = this.state\r\n        pageNum--\r\n        if (pageNum < 1) pageNum = 1\r\n        this.setState({ pageNum }, () => {\r\n            this.getArticleList()\r\n\r\n        })\r\n\r\n    }\r\n    nextPage = () => {\r\n        let { pageNum } = this.state\r\n        pageNum++\r\n        this.setState({ pageNum }, () => {\r\n            this.getArticleList()\r\n\r\n        })\r\n    }\r\n    deleteArticle = (id) => {\r\n        this.setState({ deleteId: id })\r\n        this.deleteModalToggle()\r\n    }\r\n\r\n\r\n    deleteModalToggle = () => {\r\n        this.state.deleteModalShow = !this.state.deleteModalShow\r\n        this.setState()\r\n    }\r\n    closeAlert = () => {\r\n        setTimeout(() => {\r\n            this.setState({ alertVisible: false })\r\n\r\n        }, 3000)\r\n    }\r\n    onDeleteOk = (id) => {\r\n        const { accessToken } = this.props\r\n        const { deleteId } = this.state\r\n        let _ = this\r\n        invokeCloudFunction(accessToken, `deleteArticle`, { id }, envId).then(res => {\r\n            console.log(res)\r\n            this.setState({ loading: false })\r\n            if (res.errcode == 0) {\r\n                const funcRs = JSON.parse(res.resp_data)\r\n                console.log(funcRs)\r\n                _.getArticleList()\r\n                _.setState({ alertTitle: '删除成功' })\r\n                _.setState({ alertVisible: true })\r\n                _.closeAlert()\r\n            } else {\r\n                _.setState({ alertTitle: '删除失败' })\r\n                _.setState({ alertVisible: true })\r\n                _.closeAlert()\r\n            }\r\n        }).catch(res => {\r\n            alert(res)\r\n            this.setState({ loading: false })\r\n        })\r\n        this.state.deleteModalShow = !this.state.deleteModalShow\r\n        this.state.deleteId = ''\r\n        this.setState()\r\n    }\r\n    render() {\r\n        const { loading, articles, pageNum, deleteModalShow, alertVisible, alertTitle,deleteId } = this.state\r\n        const {goToEdit} = this.props\r\n        return <div style={{ width: '100%' }}>\r\n\r\n            {/* {loading && <Spinner style={{ width: '3rem', height: '3rem' }} />} */}\r\n            {!loading && <div style={{ width: '100%' }}>\r\n                <Button onClick={() => { this.getArticleList() }}>refresh</Button>\r\n                <JyAlert title={alertTitle} alertVisible={alertVisible}></JyAlert>\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>title</th>\r\n                            <th>author</th>\r\n                            <th>operation</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.articles.map(a => {\r\n                            return <tr key={a._id}>\r\n                                <td>{a.title}</td>\r\n                                <td>{a.author}</td>\r\n                                <td>\r\n                                    <Button color=\"danger\" onClick={() => { this.deleteArticle(a._id) }}>delete</Button>\r\n                                    <Button color=\"info\" onClick={()=>{goToEdit(a._id) }}>edit</Button>\r\n                                    {/* <Button color=\"warning\">back to draft</Button> */}\r\n                                </td>\r\n                            </tr>\r\n                        })}\r\n                        {this.state.articles.length == 0 && <tr><th>no more</th></tr>}\r\n\r\n                    </tbody>\r\n                </Table>\r\n                <Pagination size=\"lg\" aria-label=\"Page navigation\">\r\n                    <PaginationItem>\r\n                        <PaginationLink first onClick={() => { this.lastPage() }} disabled={pageNum == 1} />\r\n                    </PaginationItem>\r\n                    <PaginationItem>\r\n                        <PaginationLink last onClick={() => { this.nextPage() }} disabled={articles.length == 0} />\r\n                    </PaginationItem>\r\n                </Pagination>\r\n            </div>\r\n            }\r\n            <JyModal\r\n                isShow={deleteModalShow}\r\n                onOk={this.onDeleteOk}\r\n                onCancel={() => { this.setState({ deleteModalShow: false }) }}\r\n                title=\"Are you sure to delete this?\"\r\n                id={deleteId}\r\n            >\r\n            </JyModal>\r\n            <JyLoading visible={loading}></JyLoading>\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Table, Container, Nav, NavItem, NavLink, Row, Col, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport {envId} from '../../config'\r\nimport MdEditor from 'react-markdown-editor-lite'\r\nimport MarkdownIt from 'markdown-it'\r\nimport {invokeCloudFunction} from '../../api'\r\nimport JyLoading from '../../component/JyLoading'\r\nexport default class List extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            _id:'',\r\n            mdContent:'',\r\n            htmlContent:'',\r\n            title:'',\r\n            author:'Jesse Yang',\r\n            loading:false\r\n        }\r\n        this.mdParser = new MarkdownIt()\r\n        this.handleEditorChange = this.handleEditorChange.bind(this)\r\n    }\r\n    componentWillMount(){\r\n        const {currentArticleId,accessToken,isLogin} = this.props\r\n        console.log(currentArticleId)\r\n            let _ = this\r\n        if(currentArticleId){\r\n            invokeCloudFunction(accessToken,`getArticleDetail`,{id:currentArticleId},envId).then(res=>{\r\n                console.log(res)\r\n                this.setState({loading:false})\r\n                if(res.errcode == 0){\r\n                    const funcRs= JSON.parse(res.resp_data)\r\n                   console.log(funcRs.data)\r\n                    _.setState({...this.state,...funcRs.data})\r\n                }else{\r\n                    isLogin(false)\r\n                }\r\n            }).catch(res=>{\r\n                isLogin(false)\r\n                this.setState({loading:false})\r\n            })\r\n        }\r\n    }\r\n\r\n    handleEditorChange( {html,text}){\r\n        console.log('handleEditorChange', html, text)\r\n        this.setState({htmlContent:html,mdContent:text})\r\n    }\r\n    saveArticle=(operation)=>{\r\n        const {accessToken,changeTab,isLogin} = this.props\r\n        const {htmlContent,mdContent,title,author,_id} = this.state\r\n        if(!title || !author){\r\n            alert('can not save')\r\n            return \r\n        }\r\n\r\n        let params = {\r\n            _id,\r\n            title,\r\n            author,\r\n            mdContent,\r\n            htmlContent,\r\n            status:operation\r\n        }\r\n        this.setState({loading:true})\r\n        invokeCloudFunction(accessToken,`addArticle`,params,envId).then(res=>{\r\n            console.log(res)\r\n            this.setState({loading:false})\r\n            if(res.errcode == 0){\r\n                const funcRs= JSON.parse(res.resp_data)\r\n               console.log(funcRs)\r\n               changeTab(0)\r\n            }else{\r\n                isLogin(false)\r\n            }\r\n        }).catch(res=>{\r\n            isLogin(false)\r\n            this.setState({loading:false})\r\n        })\r\n    }\r\n    render() {\r\n        const { data } = this.props\r\n        let {author,title,loading,mdContent} = this.state\r\n        return <div style={{ width: '100%' }}>\r\n            <Button color=\"primary\" onClick={()=>{this.saveArticle('save')}}>save</Button>\r\n            <Button color=\"info\" onClick={()=>{this.saveArticle('submit')}}>submit</Button>\r\n            <hr></hr>\r\n            title:<Input invalid={!title}  value={title} onChange={(e)=>{this.setState({title:e.target.value})}}></Input>\r\n            author:<Input invalid={!author} value={author} onChange={(e)=>{this.setState({author:e.target.value})}}></Input>\r\n            content:\r\n            <div style={{ height: \"800px\" }}>\r\n                <MdEditor\r\n                    value={mdContent}\r\n                    renderHTML={(text) => this.mdParser.render(text)}\r\n                    onChange={this.handleEditorChange}\r\n                />\r\n            </div>\r\n            <JyLoading visible={loading}></JyLoading>\r\n        </div>\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Modal,ModalBody,ModalFooter,Input,Button} from 'reactstrap';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            token:''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isShow ,onSave} = this.props\r\n        return <Modal isOpen={isShow}  >\r\n            <ModalBody>\r\n                <div>\r\n                <p>fbc1eb50f578ba35b11d4ff61b39847b wx9bbf102997e7c9d9</p>\r\n                <a href={'https://mp.weixin.qq.com/debug/'} target=\"_blank\">token失效。点击这里获取token，粘贴到下方</a>\r\n                    <Input onChange={(e)=>{this.setState({token:e.target.value})}}></Input>\r\n                </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" onClick={() => {onSave(this.state.token)}}>Ok</Button>{' '}\r\n            </ModalFooter>\r\n        </Modal>\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    withRouter\r\n} from \"react-router-dom\";\r\nimport { Container, Nav, NavItem, NavLink, Row, Col, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport HeadNav from './headNav.js'\r\nimport List from './list.js'\r\nimport New from './new.js'\r\nimport Login from '../login/login'\r\n\r\nclass Index extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            accessToken:\"\"\r\n            ,\r\n            navs:[\r\n                {key:0,name:'列表',href:'/'},\r\n                {key:1,name:'新增/编辑',href:'/home'},\r\n                // {key:2,name:'accessPage',href:'/home'},\r\n            ],\r\n            currentNavKey:0,\r\n            isLogin:true\r\n        };\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({accessToken:localStorage.getItem('article_token')})\r\n    }\r\n\r\n    onAccessTokenChange=(e)=>{\r\n        this.setState({accessToken:e.target.value})\r\n    }\r\n\r\n    render() {\r\n        const {accessToken,currentNavKey,currentArticleId,isLogin} =  this.state\r\n        return <div>\r\n            <Container className=\"themed-container\">\r\n                {/* <Button onClick={()=>{ localStorage.setItem(\"article_token\",accessToken)}}>save token</Button>\r\n                <Input value={this.state.accessToken}\r\n                    onChange={(e)=>{this.setState({accessToken:e.target.value})}}\r\n                ></Input> */}\r\n                <Row >\r\n                    <HeadNav currentKey={currentNavKey} links = {this.state.navs} onChange={(i)=>{this.setState({currentNavKey:i,currentArticleId:''})}}></HeadNav>\r\n                </Row>\r\n                <Row>\r\n                    {this.state.currentNavKey == 0 && <List isLogin={(e)=>{this.setState({isLogin:e})}} accessToken={accessToken} goToEdit={(articleId)=>{this.setState({currentNavKey:1,currentArticleId:articleId})}} ></List>}\r\n                    {this.state.currentNavKey == 1 && <New isLogin={(e)=>{this.setState({isLogin:e})}} currentArticleId={currentArticleId} isLogin={(e)=>{this.setState({isLogin:e})}} accessToken={accessToken} changeTab={(e)=>this.setState({currentNavKey:e})}></New>}\r\n                    {/* {this.state.currentNavKey == 2 && <div><a href={'https://mp.weixin.qq.com/debug/'} target=\"_blank\">open get accesstoken page</a></div>} */}\r\n                    \r\n                </Row>\r\n            </Container>\r\n            <Login isShow={!isLogin} onSave={(token)=>{\r\n                this.setState({accessToken:token,isLogin:true})\r\n                localStorage.setItem(\"article_token\",token)\r\n                // window.location.reload() \r\n            }}></Login>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(Index)","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport Index from './pages/index/index'\n// This site has 3 pages, all of which are rendered\n// dynamically in the browser (not server rendered).\n//\n// Although the page does not ever refresh, notice how\n// React Router keeps the URL up to date as you navigate\n// through the site. This preserves the browser history,\n// making sure things like the back button and bookmarks\n// work properly.\n\nexport default function BasicRouter() {\n  return (\n    <Router>\n      <div>\n        {/* <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <Link to=\"/dashboard\">Dashboard</Link>\n          </li>\n        </ul>\n        <hr /> */}\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Index />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n// You can think of these components as \"pages\"\n// in your app.\n\nfunction Home() {\n  return (\n    <div>\n      <h2>Home</h2>\n    </div>\n  );\n}\n\nfunction About() {\n  return (\n    <div>\n      <h2>About</h2>\n    </div>\n  );\n}\n\nfunction Dashboard() {\n  return (\n    <div>\n      <h2>Dashboard</h2>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}